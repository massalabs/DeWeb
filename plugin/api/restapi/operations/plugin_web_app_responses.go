// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/deweb-plugin/api/models"
)

// PluginWebAppOKCode is the HTTP code returned for type PluginWebAppOK
const PluginWebAppOKCode int = 200

/*
PluginWebAppOK Page found

swagger:response pluginWebAppOK
*/
type PluginWebAppOK struct {
}

// NewPluginWebAppOK creates PluginWebAppOK with default headers values
func NewPluginWebAppOK() *PluginWebAppOK {

	return &PluginWebAppOK{}
}

// WriteResponse to the client
func (o *PluginWebAppOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PluginWebAppNotFoundCode is the HTTP code returned for type PluginWebAppNotFound
const PluginWebAppNotFoundCode int = 404

/*
PluginWebAppNotFound Resource not found.

swagger:response pluginWebAppNotFound
*/
type PluginWebAppNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPluginWebAppNotFound creates PluginWebAppNotFound with default headers values
func NewPluginWebAppNotFound() *PluginWebAppNotFound {

	return &PluginWebAppNotFound{}
}

// WithPayload adds the payload to the plugin web app not found response
func (o *PluginWebAppNotFound) WithPayload(payload *models.Error) *PluginWebAppNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the plugin web app not found response
func (o *PluginWebAppNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PluginWebAppNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
